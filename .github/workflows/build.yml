---

name: "Build"

on: [push, pull_request]

jobs:
  build:
    name: ${{ format('{0}-{1}', matrix.platform, matrix.config) }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        config: [debug, release]
        include:
          - os: ubuntu-latest
            platform: linux
            triplet: x64-linux
          - os: windows-latest
            platform: windows
            triplet: x64-windows-static
    env:
      pkgs: argparse dlib fmt jsoncpp opencv spdlog
      VCPKG_ROOT: ${{ format('{0}/vcpkg', github.workspace) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup environment (Windows)
        uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.platform == 'windows' }}
      - name: Setup environment (Linux)
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y autoconf bison curl gfortran gperf libdbus-1-dev libtool libgles2-mesa-dev libx11-dev libx11-xcb-dev libxcursor-dev libxdamage-dev libxext-dev libxft-dev libxi-dev libxinerama-dev libxkbcommon-x11-dev libxrandr-dev libxtst-dev
      - name: Download model
        run: |
          curl -O https://raw.githubusercontent.com/fenollp/data.shape_predictor_68_face_landmarks/main/shape_predictor_68_face_landmarks.dat
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Initialize vcpkg
        uses: johnwason/vcpkg-action@v4
        with:
          pkgs: ${{ env.pkgs }}
          triplet: ${{ matrix.triplet }}
          token: ${{ github.token }}
      - name: Run CMake
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ${{ format('{0}-{1}', matrix.platform, matrix.config) }}
          buildPreset: ${{ format('{0}-{1}', matrix.platform, matrix.config) }}
